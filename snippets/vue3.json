{
  "Print to vue": {
    "scope": "vue",
    "prefix": "vue3",
    "body": [
      "<template>",
      "  <div>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\" setup name=\"$1\">",
      "import { ref, reactive } from 'vue';",
      "",
      "</script>",
      "",
      "<style lang=\"less\" src=\"./style.less\" scope></style>",
      ""
    ],
    "description": "vue3默认代码片段"
  },
  "admin list":{
    "scope": "vue",
    "prefix": "admin.list",
    "description": "admin list片段，上面搜索下面列表",
    "body":[
      "<template>",
      " <PageContainer>",
      "   <SearchForm",
      "     v-model=\"formModel\"",
      "     :form-filed-list=\"formArr\"",
      "     :label-width=\"70px\"",
      "     one-row-show-button",
      "     @handle-btn-click=\"handleSearchBtnClick\"",
      "   >",
      "   </SearchForm>",
      "",
      "   <a-space>",
      "     <!-- 按钮，记得加权限 -->",
      "     <a-button",
      "       v-permission=\"\"",
      "       type=\"primary\"",
      "       size=\"mini\"",
      "       style=\"margin-bottom: 15px\"",
      "       >",
      "       按钮",
      "     </a-button>",
      "   </a-space>",
      "",
      "   <template #resize>",
      "    <a-table",
      "      row-key=\"id\"",
      "      :pagination=\"pagination\"",
      "      :data=\"renderData\"",
      "      :loading=\"loading\"",
      "       :columns=\"columns\"",
      "       :scroll=\"{ x: '100%', y: '100%' }\"",
      "       :bordered=\"{ cell: true }\"",
      "       @page-change=\"onPageChange\"",
      "       @page-size-change=\"onPageSizeChange\"",
      "       @sorter-change=\"onSortChange\"",
      "     >",
      "       <template #action=\"{ record }\">",
      "         <a-button",
      "           v-permission=\"$2\"",
      "           type=\"text\"",
      "           @click=\"handleEdit(record)\"",
      "           >编辑</a-button",
      "         >",
      "       </template>",
      "     </a-table>",
      "   </template>",
      " </PageContainer>",
      "</template>",
      "",
      "<script lang=\"ts\" setup name=\"$1\">",
      "import { ref } from 'vue';",
      "import { FormFiled } from '@xier/admin-ui/es/form/src/props';",
      "import useTable from '@/hooks/useTable';",
      "import { getFormFileds, getBasicColumns } from './data';",

      "const formArr = ref<FormFiled[]>(getFormFileds());",

      "const generateFormModel = (): any => {",
      "  return {",
      "    date: [],",
      "    orderKey: null,",
      "    sort: null,",
      "  };",
      "};",

      "const getParams = ({ form }: any) => {",
      "  const data = { ...form };",
      "  const params = data;",
      "  if (params?.date?.length) {",
      "    const [createStartTime, createEndTime] = params.date;",
      "    params.createStartTime = createStartTime;",
      "    params.createEndTime = createEndTime;",
      "  }",
      "  delete params.date;",
      "",
      "  return params;",
      "};",

      "const columns = ref<any[]>([]);",
      "columns.value = getBasicColumns();",
      "",
      "const {",
      "  renderData,",
      "  formModel,",
      "  loading,",
      "  pagination,",
      "  handleReset,",
      "  handleSearch,",
      "  onPageChange,",
      "  onPageSizeChange,",
      "} = useTable({",
      "  api: getChannelConfigPage, // todo 记得替换api",
      "  getParams,",
      "  getInitParams: generateFormModel,",
      "  getResetParams: getParams,",
      "});",

      "handleSearch();",
      "const handleEdit = () => {};",
      "const onSortChange = (dataIndex: string, direction: string) => {",
      "  if (direction) {",
      "    formModel.value.orderKey = dataIndex;",
      "    formModel.value.sort = direction !== 'ascend';",
      "  } else {",
      "    formModel.value.orderKey = null;",
      "    formModel.value.sort = null;",
      "  }",

      "  handleSearch();",
      "};",
      "",
      "const handleSearchBtnClick = (type: string) => {",
      "  if (type === 'search') {",
      "    handleSearch();",
      "  }",

      "  if (type === 'reset') {",
      "    handleReset();",
      "  }",
      "};",
      "</script>",
      "",
      "<style lang=\"less\" scoped></style>"
    ]
  }
}
