{
  "Print to vue": {
    "scope": "vue",
    "prefix": "vue3",
    "body": [
      "<template>",
      "  <div>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\" setup name=\"$1\">",
      "import { ref, reactive } from 'vue';",
      "",
      "</script>",
      "",
      "<style lang=\"less\" src=\"./style.less\" scoped></style>",
      ""
    ],
    "description": "vue3默认代码片段"
  },
  "admin list":{
    "scope": "vue",
    "prefix": "admin.list",
    "description": "admin list片段，上面搜索下面列表",
    "body":[
      "<template>",
      " <PageContainer>",
      "   <SearchForm",
      "     v-model=\"formModel\"",
      "     :form-filed-list=\"formArr\"",
      "     :label-width=\"70px\"",
      "     one-row-show-button",
      "     @handle-btn-click=\"handleSearchBtnClick\"",
      "   >",
      "   </SearchForm>",
      "",
      "   <template #button>",
      "     <!-- 按钮，记得加权限 -->",
      "     <a-button",
      "       v-permission=\"\"",
      "       type=\"primary\"",
      "       style=\"margin-bottom: 15px\"",
      "       >",
      "       按钮",
      "     </a-button>",
      "   </template>",
      "",
      "   <template #resize>",
      "    <a-table",
      "      row-key=\"id\"",
      "      :pagination=\"pagination\"",
      "      :data=\"renderData\"",
      "      :loading=\"loading\"",
      "       :columns=\"columns\"",
      "       :scroll=\"{ x: '100%', y: '100%' }\"",
      "       :bordered=\"{ cell: true }\"",
      "       @page-change=\"onPageChange\"",
      "       @page-size-change=\"onPageSizeChange\"",
      "       @sorter-change=\"onSortChange\"",
      "     >",
      "       <template #action=\"{ record }\">",
      "         <a-button",
      "           v-permission=\"$2\"",
      "           type=\"text\"",
      "           @click=\"handleEdit(record)\"",
      "           >编辑</a-button",
      "         >",
      "       </template>",
      "     </a-table>",
      "   </template>",
      " </PageContainer>",
      "</template>",
      "",
      "<script lang=\"ts\" setup name=\"$1\">",
      "import { ref } from 'vue';",
      "import { FormFiled } from '@xier/admin-ui/es/form/src/props';",
      "import useTable from '@/hooks/useTable';",
      "import { getFormFileds, getBasicColumns } from './data';",

      "const formArr = ref<FormFiled[]>(getFormFileds());",

      "const generateFormModel = (): any => {",
      "  return {",
      "    date: [],",
      "    orderKey: null,",
      "    sort: null,",
      "  };",
      "};",

      "const getParams = ({ form }: any) => {",
      "  const data = { ...form };",
      "  const params = data;",
      "  if (params?.date?.length) {",
      "    const [createStartTime, createEndTime] = params.date;",
      "    params.createStartTime = createStartTime;",
      "    params.createEndTime = createEndTime;",
      "  }",
      "  delete params.date;",
      "",
      "  return params;",
      "};",

      "const columns = ref<any[]>([]);",
      "columns.value = getBasicColumns();",
      "",
      "const {",
      "  renderData,",
      "  formModel,",
      "  loading,",
      "  pagination,",
      "  handleReset,",
      "  handleSearch,",
      "  onPageChange,",
      "  onPageSizeChange,",
      "} = useTable({",
      "  api: getChannelConfigPage, // todo 记得替换api",
      "  getParams,",
      "  getInitParams: generateFormModel,",
      "  getResetParams: getParams,",
      "});",

      "handleSearch();",
      "const handleEdit = () => {};",
      "const onSortChange = (dataIndex: string, direction: string) => {",
      "  if (direction) {",
      "    formModel.value.orderKey = dataIndex;",
      "    formModel.value.sort = direction !== 'ascend';",
      "  } else {",
      "    formModel.value.orderKey = null;",
      "    formModel.value.sort = null;",
      "  }",

      "  handleSearch();",
      "};",
      "",
      "const handleSearchBtnClick = (type: string) => {",
      "  if (type === 'search') {",
      "    handleSearch();",
      "  }",

      "  if (type === 'reset') {",
      "    handleReset();",
      "  }",
      "};",
      "</script>",
      "",
      "<style lang=\"less\" scoped></style>"
    ]
  },
  "admin modal template": {
    "scope": "vue",
    "prefix": "admin.modal",
    "description": "template.vue 弹窗Modal主体",
    "body": [
      "<!--",
      "  xxxx弹窗",
      " -->",
      "<template>",
      "  <div>",
      "    <a-modal",
      "      v-model:visible=\"visible\"",
      "      title=\"xxxx\"",
      "      width=\"1200px\"",
      "      title-align=\"start\"",
      "      :esc-to-close=\"false\"",
      "      :closable=\"false\"",
      "      :mask-closable=\"false\"",
      "      :cancel-button-props=\"{ disabled: loading }\"",
      "      :ok-loading=\"loading\"",
      "      @before-ok=\"onOk\"",
      "      @cancel=\"handleCancel\"",
      "      @close=\"handleClose\"",
      "    >",
      "    </a-modal>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\" setup>",
      "import { defineProps, withDefaults, watch } from 'vue';",
      "import useModalDefault from '@/hooks/useModalDefault';",
      "",
      "interface Props {",
      "  propsData: Record<string, any>;",
      "  status?: number; // 1=新建；2=编辑；3=查看",
      "  close: () => void;",
      "  resolve: () => void;",
      "}",
      "",
      "const props = withDefaults(defineProps<Props>(), {",
      "  propsData: () => {",
      "    return {};",
      "  },",
      "  status: 1,",
      "  close: () => {",
      "    return () => {};",
      "  },",
      "  resolve: () => {",
      "    return () => {};",
      "  },",
      "});",
      "",
      "// todo useModalDefault此hooks，admin模板记得拉最新的代码",
      "const { visible, loading, handleOk, handleCancel, handleClose } =",
      "  useModalDefault({",
      "    close: props.close,",
      "    resolve: props.resolve,",
      "  });",
      "",
      "watch(",
      "  () => props.propsData,",
      "  (newVal: any) => {},",
      "  { deep: true, immediate: true }",
      ");",
      "",
      "function onOk() {",
      "  // handleOk('requestApi', 'params');",
      "}",
      "</script>",
      "",
      "<style lang=\"less\" scoped></style>",
      ""
    ]
  },
  "admin detail template": {
    "prefix": "admin.detail",
    "description": "二级详情页面",
    "body": [
      "<template>",
      "  <PageContainerDetail title=\"$1\" :footer=\"true\">",
      "    <a-spin :loading=\"loading\" dot style=\"width: 100%\"></a-spin>",
      "    <template v-if=\"!loading\" #footerRight>",
      "      <a-space>",
      "        <a-button @click=\"back\">返回</a-button>",
      "        <a-button type=\"primary\" @click=\"save\">保存</a-button>",
      "      </a-space>",
      "    </template>",
      "  </PageContainerDetail>",
      "</template>",
      "",
      "<script lang=\"ts\" setup>",
      "import { ref } from 'vue';",
      "import { useRouter } from 'vue-router';",
      "import { PageContainerDetail } from '@xier/admin-ui';",
      "import Message from '@arco-design/web-vue/es/message';",
      "",
      "const router = useRouter();",
      "const loading = ref(false);",
      "// 保存sku表单的信息",
      "const save = () => {",
      "  Message.success('提交成功');",
      "  back();",
      "};",
      "",
      "// 返回按钮",
      "const back = () => {",
      "  router.replace('/xxx');",
      "};",
      "</script>",
      "",
      "<style lang=\"less\" scoped></style>",
      ""
    ]
  },
  "apiMount弹窗": {
    "prefix": "admin.modalel",
    "body": [
      "<template>",
      "  <el-dialog",
      "    top=\"20%\"",
      "    :visible.sync=\"visible\"",
      "    title=\"新增\"",
      "    width=\"600px\"",
      "    :close-on-click-modal=\"false\"",
      "    :close-on-press-escape=\"false\"",
      "    destroy-on-close",
      "    @closed=\"handleClose\"",
      "  >",
      "    <span slot=\"footer\">",
      "      <el-button @click=\"handleCancel\">取 消</el-button>",
      "      <el-button type=\"primary\" :loading=\"loading\" @click=\"handleOk\">",
      "        确 定",
      "      </el-button>",
      "    </span>",
      "  </el-dialog>",
      "</template>",
      "",
      "<script setup>",
      "import { ref, onMounted, defineProps } from 'vue'",
      "",
      "const visible = ref(false)",
      "const type = ref('')",
      "const loading = ref(false)",
      "",
      "const props = defineProps({",
      "  close: Function,",
      "  resolve: Function",
      "})",
      "onMounted(() => {",
      "  visible.value = true",
      "})",
      "const handleSuccess = () => {",
      "  type.value = 'reslove'",
      "}",
      "const handleOk = () => {",
      "  handleSuccess()",
      "  handleClose()",
      "}",
      "const handleCancel = () => {",
      "  dialogVisible.value = false",
      "}",
      "const handleClose = (res = {}) => {",
      "  if (type.value === 'reslove') {",
      "    props.resolve(res)",
      "  } else {",
      "    props.close()",
      "  }",
      "}",
      "</script>",
      ""
    ],
    "description": "apiMount弹窗，小程序后台使用"
  }
}
